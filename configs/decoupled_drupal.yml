# Can we setup traefik to proxy to `drupal` and `frontend`?
# The `expose` option leaves unpredictable URLs for the frontend to talk to the backend.
# https://docs.tugboat.qa/setting-up-services/how-to-set-up-services/expose-a-service-http-port/
services:
  # entrypoint:
    # image: tugboatqa/traefik:livarot
    # default: true
    # aliases: ['app', 'api']
  drupal:
    image: tugboatqa/php:7.4-apache
    expose: 80
    depends: mysql
    checkout: true
    commands:
      # Commands that set up the basic Preview.
      init:
        # Tugboat sets up a minimal environment, you must add requirements.
        - a2enmod rewrite
        - docker-php-ext-install opcache
        # Link the project docroot to the defined Apache docroot in Tugboat.
        - ln -snf "${TUGBOAT_ROOT}/drupal/web" "${DOCROOT}"

        # Ensure the storage directory the web server for writing.
        - chown -R www-data:www-data ${TUGBOAT_ROOT}/drupal/web/sites/default
      # Commands that build or generate the actual site
      build:
        # - cp ${TUGBOAT_ROOT}/drupal/.env.tugboat ${TUGBOAT_ROOT}/drupal/.env

        # Install dependencies
        - composer install --no-dev --prefer-dist --working-dir ${TUGBOAT_ROOT}/drupal

        # Install any schema updates.
        - cd ${TUGBOAT_ROOT}/drupal && php vendor/bin/drush updb --yes
        # In a real site, you'd also run a config import
        # - php ${TUGBOAT_ROOT}/drupal/vendor/bin/drush cim --yes

        # Copy over the Umami image files, normally you would download from an archive in `init` and rsync in build.
        - mkdir ${TUGBOAT_ROOT}/web/sites/default/files
        - cp -r ${TUGBOAT_ROOT}/web/core/profiles/demo_umami/modules/demo_umami_content/default_content/images ${TUGBOAT_ROOT}/web/sites/default/files

        # Ensure permissions on the site/default directory.
        - chown -R www-data:www-data ${TUGBOAT_ROOT}/web/sites/default
  frontend:
    image: tugboatqa/httpd:2.4
    default: true
    # checkout: true
    commands:
      # Commands that set up the basic Preview.
      init:
        # Adding the NodeSource APT repository AND the PGP key for verifying packages
        - curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
        - apt-get install -y nodejs
        - npm install --global yarn
      build:
        - yarn install --cwd ${TUGBOAT_ROOT}/my-app
        - cd ${TUGBOAT_ROOT}/my-app && yarn run build
        - ln -snf "${TUGBOAT_ROOT}/my-app/build" "${DOCROOT}"
  mysql:
    image: tugboatqa/mysql:5.7
    commands:
      init:
        # Download a database dump to import.
        - curl -o /tmp/database.sql.gz https://bhcdn.sfo2.digitaloceanspaces.com/tugboat/umami-jsonapi.sql.gz
        - zcat /tmp/database.sql.gz | mysql tugboat
        - rm /tmp/database.sql.gz
